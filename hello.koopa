global @ga = alloc [i32, 3], zeroinit
global @gb = alloc [[i32, 3], 2], {{5, 6, 7}, {8, 0, 0}}

decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @main(): i32 {
%entry:
  %retval = alloc i32
  @a = alloc [i32, 3]
  @b = alloc [[i32, 3], 2]
  @sum = alloc i32
  jump %0

%0:
  %1 = getelemptr @b, 0
  %2 = getelemptr %1, 0
  store 1, %2
  %3 = getelemptr %1, 1
  store 2, %3
  %4 = getelemptr %1, 2
  store 3, %4
  %5 = getelemptr @b, 1
  %6 = getelemptr %5, 0
  store 4, %6
  %7 = getelemptr %5, 1
  store 0, %7
  %8 = getelemptr %5, 2
  store 0, %8
  store 0, @sum
  %9 = getelemptr @a, 0
  store 5, %9
  %10 = getelemptr @b, 1
  %11 = getelemptr %10, 2
  %12 = getelemptr @a, 0
  %13 = load %11
  %14 = load %12
  %15 = add %13, %14
  store %15, @sum
  %16 = getelemptr @ga, 0
  %17 = load @sum
  %18 = load %16
  %19 = add %17, %18
  %20 = getelemptr @gb, 1
  %21 = getelemptr %20, 2
  %22 = load %21
  %23 = add %19, %22
  store %23, @sum
  %24 = load @sum
  store %24, %retval
  jump %exit

%25:
  jump %exit

%exit:
  %26 = load %retval
  ret %26
}
